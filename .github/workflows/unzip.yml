name: Unzip and commit

on:
  push:
    paths:
      - '*.zip'         # triggers when a .zip is added/changed at the repo root

permissions:
  contents: write       # allow the workflow to push commits

jobs:
  unzip:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      # Find the zip that triggered this run (assumes you push one zip at a time)
      - name: Detect zip filename
        id: findzip
        shell: bash
        run: |
          ZIPFILE="$(find . -maxdepth 1 -name '*.zip' -printf '%f\n' | head -n 1)"
          if [ -z "$ZIPFILE" ]; then
            echo "No zip found at repo root."
            exit 1
          fi
          echo "zipfile=$ZIPFILE" >> $GITHUB_OUTPUT
          echo "Found: $ZIPFILE"

      # Unzip and FLATTEN: if there is a top-level "project/" folder, move its contents to repo root.
      - name: Unzip and flatten
        shell: bash
        run: |
          set -euo pipefail
          ZIPFILE='${{ steps.findzip.outputs.zipfile }}'
          rm -rf _tmp
          mkdir _tmp
          unzip -q -o "$ZIPFILE" -d _tmp

          shopt -s dotglob

          if [ -d _tmp/project ]; then
            # Your case: contents live under top-level "project/"
            echo "Flattening _tmp/project/ to repo root..."
            rsync -a _tmp/project/ .
          else
            # If the zip has exactly one top-level folder, flatten that; else copy everything
            TOPDIRS=$(find _tmp -mindepth 1 -maxdepth 1 -type d | wc -l)
            if [ "$TOPDIRS" -eq 1 ]; then
              DIR=$(find _tmp -mindepth 1 -maxdepth 1 -type d)
